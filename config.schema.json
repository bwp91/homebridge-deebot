{
  "pluginAlias": "Deebot",
  "pluginType": "platform",
  "singular": true,
  "customUi": true,
  "customUiPath": "./lib/homebridge-ui",
  "headerDisplay": "<p align=\"center\"><img width=\"60%\" src=\"https://user-images.githubusercontent.com/43026681/101321841-f0eb5280-385d-11eb-8dd4-f57113f6e078.png\"></p><p align=\"center\">For help and support please visit our <a href=\"https://github.com/bwp91/homebridge-deebot/wiki\">GitHub Wiki</a>. We hope you find this plugin useful!</p>",
  "schema": {
    "type": "object",
    "properties": {
      "name": {
        "title": "Plugin Name",
        "type": "string",
        "default": "Deebot"
      },
      "useYeedi": {
        "title": "Use Yeedi Login",
        "type": "boolean",
        "description": "Enable this for Yeedi login instead of ECOVACS."
      },
      "countryCode": {
        "title": "Country Code",
        "description": "Two-letter country code which you can find <a href=\"https://github.com/bwp91/homebridge-deebot/wiki/Country-Codes\" target=\"_blank\">here</a>.",
        "type": "string",
        "required": true
      },
      "username": {
        "title": "ECOVACS/Yeedi Username",
        "required": true,
        "type": "string",
        "description": "Your username, if your account is based in China you should use your ECOVACS ID."
      },
      "password": {
        "title": "ECOVACS/Yeedi Password",
        "required": true,
        "type": "string",
        "description": "Your password, can also be a base64 encoded version of your password."
      },
      "debug": {
        "title": "Debug Logging",
        "type": "boolean"
      },
      "disablePlugin": {
        "title": "Disable Plugin",
        "type": "boolean"
      },
      "disableDeviceLogging": {
        "type": "boolean",
        "title": "Disable Device Logging",
        "description": "Global logging setting for accessory status changes. If true then accessory status changes will not be logged. This can also be set per accessory later in the config."
      },
      "refreshTime": {
        "title": "Refresh Interval",
        "type": "integer",
        "placeholder": 120,
        "minimum": 30,
        "description": "An interval (in seconds) in which your devices will refresh with ECOVACS. Must be 30 or more."
      },
      "devices": {
        "title": "Device Settings",
        "description": "Optional settings for your devices.",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "label": {
              "title": "Label",
              "type": "string",
              "description": "This setting has no effect except to help identify this device."
            },
            "deviceId": {
              "title": "Device ID",
              "type": "string",
              "description": "ECOVACS Device ID of the device these settings apply to, e.g. E2000000000000000000."
            },
            "ignoreDevice": {
              "type": "boolean",
              "title": "Hide From HomeKit",
              "description": "If true, this accessory will be removed and ignored from HomeKit.",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0);"
              }
            },
            "hideMotionSensor": {
              "title": "Hide Motion Sensor",
              "type": "boolean",
              "description": "If true, the motion sensor for device alerts will be hidden.",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice);"
              }
            },
            "motionDuration": {
              "title": "Alert Notification Time",
              "type": "integer",
              "placeholder": 30,
              "minimum": 1,
              "description": "The length of time (in seconds) that the motion detector will be activated if your Deebot sends a message, needs help or has low battery (if enabled below). The message is viewable in the log. Must be 1 or more.",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.hideMotionSensor && !model?.devices?.[arrayIndices]?.ignoreDevice);"
              }
            },
            "lowBattThreshold": {
              "title": "Low Battery Threshold",
              "type": "integer",
              "placeholder": 15,
              "minimum": 1,
              "description": "The battery percentage at which the plugin should display a low battery status. Leave blank to match the Deebot default of 15%. Must be 1 or more.",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice);"
              }
            },
            "showMotionLowBatt": {
              "title": "Low Battery Motion Sensor",
              "type": "boolean",
              "description": "If true, the motion sensor will activate when the Deebot's battery reaches the low battery threshold.",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.hideMotionSensor && !model?.devices?.[arrayIndices]?.ignoreDevice);"
              }
            },
            "showBattHumidity": {
              "title": "Show (Humidity) Battery Sensor",
              "type": "boolean",
              "description": "If true, a humidity sensor showing the battery percentage will be shown.",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice);"
              }
            },
            "command1": {
              "title": "Spot Area 1",
              "type": "string",
              "description": "Enter a 'Spot Area' number or multiple numbers separated by a comma.",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice  && model?.devices?.[arrayIndices]?.command1);"
              }
            },
            "command2": {
              "title": "Spot Area 2",
              "type": "string",
              "description": "Enter a 'Spot Area' number or multiple numbers separated by a comma.",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.command2);"
              }
            },
            "command3": {
              "title": "Spot Area 3",
              "type": "string",
              "description": "Enter a 'Spot Area' number or multiple numbers separated by a comma.",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.command3);"
              }
            },
            "command4": {
              "title": "Spot Area 4",
              "type": "string",
              "description": "Enter a 'Spot Area' number or multiple numbers separated by a comma.",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.command4);"
              }
            },
            "command5": {
              "title": "Spot Area 5",
              "type": "string",
              "description": "Enter a 'Spot Area' number or multiple numbers separated by a comma.",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.command5);"
              }
            },
            "command6": {
              "title": "Spot Area 6",
              "type": "string",
              "description": "Enter a 'Spot Area' number or multiple numbers separated by a comma.",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.command6);"
              }
            },
            "command7": {
              "title": "Spot Area 7",
              "type": "string",
              "description": "Enter a 'Spot Area' number or multiple numbers separated by a comma.",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.command7);"
              }
            },
            "command8": {
              "title": "Spot Area 8",
              "type": "string",
              "description": "Enter a 'Spot Area' number or multiple numbers separated by a comma.",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.command8);"
              }
            },
            "command9": {
              "title": "Spot Area 9",
              "type": "string",
              "description": "Enter a 'Spot Area' number or multiple numbers separated by a comma.",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.command9);"
              }
            },
            "command10": {
              "title": "Spot Area 10",
              "type": "string",
              "description": "Enter a 'Spot Area' number or multiple numbers separated by a comma.",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.command10);"
              }
            },
            "command11": {
              "title": "Spot Area 11",
              "type": "string",
              "description": "Enter a 'Spot Area' number or multiple numbers separated by a comma.",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.command11);"
              }
            },
            "command12": {
              "title": "Spot Area 12",
              "type": "string",
              "description": "Enter a 'Spot Area' number or multiple numbers separated by a comma.",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.command12);"
              }
            },
            "command13": {
              "title": "Spot Area 13",
              "type": "string",
              "description": "Enter a 'Spot Area' number or multiple numbers separated by a comma.",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.command13);"
              }
            },
            "command14": {
              "title": "Spot Area 14",
              "type": "string",
              "description": "Enter a 'Spot Area' number or multiple numbers separated by a comma.",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.command14);"
              }
            },
            "command15": {
              "title": "Spot Area 15",
              "type": "string",
              "description": "Enter a 'Spot Area' number or multiple numbers separated by a comma.",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.command15);"
              }
            },
            "commandType1": {
              "title": "Type",
              "type": "string",
              "oneOf": [
                { "title": "Spot Area", "enum": ["spotArea"] },
                { "title": "Custom Area", "enum": ["customArea"] }
              ]
            },
            "spotAreaCommand1": {
              "title": "Command",
              "type": "string",
              "required": true,
              "description": "Enter a 'Spot Area' number or multiple numbers separated by a comma.",
              "pattern": "^([0-9]|[1-9][0-9]+|(([0-9],|[1-9][0-9]+,)+([0-9]|[1-9][0-9]+)))$",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType1 == 'spotArea' );"
              }
            },
            "customAreaCommand1": {
              "title": "Command",
              "type": "string",
              "required": true,
              "description": "Enter a 'Custom Area' by providing the coordinates in the format 'x1,y1,x2,y2' (without decimals and the inverted comma).",
              "pattern": "^((-?[0-9],|-?[1-9][0-9]+,){3}(-?[0-9]|-?[1-9][0-9]+))$",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType1 == 'customArea' );"
              }
            },
            "commandNote1": {
              "title": "Note",
              "type": "string",
              "description": "Enter a note for this predefined area.",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType1);"
              }
            },
            "commandType2": {
              "title": "Type",
              "type": "string",
              "oneOf": [
                { "title": "Spot Area", "enum": ["spotArea"] },
                { "title": "Custom Area", "enum": ["customArea"] }
              ]
            },
            "spotAreaCommand2": {
              "title": "Command",
              "type": "string",
              "required": true,
              "description": "Enter a 'Spot Area' number or multiple numbers separated by a comma.",
              "pattern": "^([0-9]|[1-9][0-9]+|(([0-9],|[1-9][0-9]+,)+([0-9]|[1-9][0-9]+)))$",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType2 == 'spotArea' );"
              }
            },
            "customAreaCommand2": {
              "title": "Command",
              "type": "string",
              "required": true,
              "description": "Enter a 'Custom Area' by providing the coordinates in the format 'x1,y1,x2,y2' (without decimals and the inverted comma).",
              "pattern": "^((-?[0-9],|-?[1-9][0-9]+,){3}(-?[0-9]|-?[1-9][0-9]+))$",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType2 == 'customArea' );"
              }
            },
            "commandNote2": {
              "title": "Note",
              "type": "string",
              "description": "Enter a note for this predefined area.",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType2);"
              }
            },
            "commandType3": {
              "title": "Type",
              "type": "string",
              "oneOf": [
                { "title": "Spot Area", "enum": ["spotArea"] },
                { "title": "Custom Area", "enum": ["customArea"] }
              ]
            },
            "spotAreaCommand3": {
              "title": "Command",
              "type": "string",
              "required": true,
              "description": "Enter a 'Spot Area' number or multiple numbers separated by a comma.",
              "pattern": "^([0-9]|[1-9][0-9]+|(([0-9],|[1-9][0-9]+,)+([0-9]|[1-9][0-9]+)))$",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType3 == 'spotArea' );"
              }
            },
            "customAreaCommand3": {
              "title": "Command",
              "type": "string",
              "required": true,
              "description": "Enter a 'Custom Area' by providing the coordinates in the format 'x1,y1,x2,y2' (without decimals and the inverted comma).",
              "pattern": "^((-?[0-9],|-?[1-9][0-9]+,){3}(-?[0-9]|-?[1-9][0-9]+))$",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType3 == 'customArea' );"
              }
            },
            "commandNote3": {
              "title": "Note",
              "type": "string",
              "description": "Enter a note for this predefined area.",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType3);"
              }
            },
            "commandType4": {
              "title": "Type",
              "type": "string",
              "oneOf": [
                { "title": "Spot Area", "enum": ["spotArea"] },
                { "title": "Custom Area", "enum": ["customArea"] }
              ]
            },
            "spotAreaCommand4": {
              "title": "Command",
              "type": "string",
              "required": true,
              "description": "Enter a 'Spot Area' number or multiple numbers separated by a comma.",
              "pattern": "^([0-9]|[1-9][0-9]+|(([0-9],|[1-9][0-9]+,)+([0-9]|[1-9][0-9]+)))$",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType4 == 'spotArea' );"
              }
            },
            "customAreaCommand4": {
              "title": "Command",
              "type": "string",
              "required": true,
              "description": "Enter a 'Custom Area' by providing the coordinates in the format 'x1,y1,x2,y2' (without decimals and the inverted comma).",
              "pattern": "^((-?[0-9],|-?[1-9][0-9]+,){3}(-?[0-9]|-?[1-9][0-9]+))$",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType4 == 'customArea' );"
              }
            },
            "commandNote4": {
              "title": "Note",
              "type": "string",
              "description": "Enter a note for this predefined area.",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType4);"
              }
            },
            "commandType5": {
              "title": "Type",
              "type": "string",
              "oneOf": [
                { "title": "Spot Area", "enum": ["spotArea"] },
                { "title": "Custom Area", "enum": ["customArea"] }
              ]
            },
            "spotAreaCommand5": {
              "title": "Command",
              "type": "string",
              "required": true,
              "description": "Enter a 'Spot Area' number or multiple numbers separated by a comma.",
              "pattern": "^([0-9]|[1-9][0-9]+|(([0-9],|[1-9][0-9]+,)+([0-9]|[1-9][0-9]+)))$",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType5 == 'spotArea' );"
              }
            },
            "customAreaCommand5": {
              "title": "Command",
              "type": "string",
              "required": true,
              "description": "Enter a 'Custom Area' by providing the coordinates in the format 'x1,y1,x2,y2' (without decimals and the inverted comma).",
              "pattern": "^((-?[0-9],|-?[1-9][0-9]+,){3}(-?[0-9]|-?[1-9][0-9]+))$",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType5 == 'customArea' );"
              }
            },
            "commandNote5": {
              "title": "Note",
              "type": "string",
              "description": "Enter a note for this predefined area.",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType5);"
              }
            },
            "commandType6": {
              "title": "Type",
              "type": "string",
              "oneOf": [
                { "title": "Spot Area", "enum": ["spotArea"] },
                { "title": "Custom Area", "enum": ["customArea"] }
              ]
            },
            "spotAreaCommand6": {
              "title": "Command",
              "type": "string",
              "required": true,
              "description": "Enter a 'Spot Area' number or multiple numbers separated by a comma.",
              "pattern": "^([0-9]|[1-9][0-9]+|(([0-9],|[1-9][0-9]+,)+([0-9]|[1-9][0-9]+)))$",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType6 == 'spotArea' );"
              }
            },
            "customAreaCommand6": {
              "title": "Command",
              "type": "string",
              "required": true,
              "description": "Enter a 'Custom Area' by providing the coordinates in the format 'x1,y1,x2,y2' (without decimals and the inverted comma).",
              "pattern": "^((-?[0-9],|-?[1-9][0-9]+,){3}(-?[0-9]|-?[1-9][0-9]+))$",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType6 == 'customArea' );"
              }
            },
            "commandNote6": {
              "title": "Note",
              "type": "string",
              "description": "Enter a note for this predefined area.",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType6);"
              }
            },
            "commandType7": {
              "title": "Type",
              "type": "string",
              "oneOf": [
                { "title": "Spot Area", "enum": ["spotArea"] },
                { "title": "Custom Area", "enum": ["customArea"] }
              ]
            },
            "spotAreaCommand7": {
              "title": "Command",
              "type": "string",
              "required": true,
              "description": "Enter a 'Spot Area' number or multiple numbers separated by a comma.",
              "pattern": "^([0-9]|[1-9][0-9]+|(([0-9],|[1-9][0-9]+,)+([0-9]|[1-9][0-9]+)))$",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType7 == 'spotArea' );"
              }
            },
            "customAreaCommand7": {
              "title": "Command",
              "type": "string",
              "required": true,
              "description": "Enter a 'Custom Area' by providing the coordinates in the format 'x1,y1,x2,y2' (without decimals and the inverted comma).",
              "pattern": "^((-?[0-9],|-?[1-9][0-9]+,){3}(-?[0-9]|-?[1-9][0-9]+))$",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType7 == 'customArea' );"
              }
            },
            "commandNote7": {
              "title": "Note",
              "type": "string",
              "description": "Enter a note for this predefined area.",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType7);"
              }
            },
            "commandType8": {
              "title": "Type",
              "type": "string",
              "oneOf": [
                { "title": "Spot Area", "enum": ["spotArea"] },
                { "title": "Custom Area", "enum": ["customArea"] }
              ]
            },
            "spotAreaCommand8": {
              "title": "Command",
              "type": "string",
              "required": true,
              "description": "Enter a 'Spot Area' number or multiple numbers separated by a comma.",
              "pattern": "^([0-9]|[1-9][0-9]+|(([0-9],|[1-9][0-9]+,)+([0-9]|[1-9][0-9]+)))$",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType8 == 'spotArea' );"
              }
            },
            "customAreaCommand8": {
              "title": "Command",
              "type": "string",
              "required": true,
              "description": "Enter a 'Custom Area' by providing the coordinates in the format 'x1,y1,x2,y2' (without decimals and the inverted comma).",
              "pattern": "^((-?[0-9],|-?[1-9][0-9]+,){3}(-?[0-9]|-?[1-9][0-9]+))$",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType8 == 'customArea' );"
              }
            },
            "commandNote8": {
              "title": "Note",
              "type": "string",
              "description": "Enter a note for this predefined area.",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType8);"
              }
            },
            "commandType9": {
              "title": "Type",
              "type": "string",
              "oneOf": [
                { "title": "Spot Area", "enum": ["spotArea"] },
                { "title": "Custom Area", "enum": ["customArea"] }
              ]
            },
            "spotAreaCommand9": {
              "title": "Command",
              "type": "string",
              "required": true,
              "description": "Enter a 'Spot Area' number or multiple numbers separated by a comma.",
              "pattern": "^([0-9]|[1-9][0-9]+|(([0-9],|[1-9][0-9]+,)+([0-9]|[1-9][0-9]+)))$",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType9 == 'spotArea' );"
              }
            },
            "customAreaCommand9": {
              "title": "Command",
              "type": "string",
              "required": true,
              "description": "Enter a 'Custom Area' by providing the coordinates in the format 'x1,y1,x2,y2' (without decimals and the inverted comma).",
              "pattern": "^((-?[0-9],|-?[1-9][0-9]+,){3}(-?[0-9]|-?[1-9][0-9]+))$",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType9 == 'customArea' );"
              }
            },
            "commandNote9": {
              "title": "Note",
              "type": "string",
              "description": "Enter a note for this predefined area.",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType9);"
              }
            },
            "commandType10": {
              "title": "Type",
              "type": "string",
              "oneOf": [
                { "title": "Spot Area", "enum": ["spotArea"] },
                { "title": "Custom Area", "enum": ["customArea"] }
              ]
            },
            "spotAreaCommand10": {
              "title": "Command",
              "type": "string",
              "required": true,
              "description": "Enter a 'Spot Area' number or multiple numbers separated by a comma.",
              "pattern": "^([0-9]|[1-9][0-9]+|(([0-9],|[1-9][0-9]+,)+([0-9]|[1-9][0-9]+)))$",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType10 == 'spotArea' );"
              }
            },
            "customAreaCommand10": {
              "title": "Command",
              "type": "string",
              "required": true,
              "description": "Enter a 'Custom Area' by providing the coordinates in the format 'x1,y1,x2,y2' (without decimals and the inverted comma).",
              "pattern": "^((-?[0-9],|-?[1-9][0-9]+,){3}(-?[0-9]|-?[1-9][0-9]+))$",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType10 == 'customArea' );"
              }
            },
            "commandNote10": {
              "title": "Note",
              "type": "string",
              "description": "Enter a note for this predefined area.",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType10);"
              }
            },
            "commandType11": {
              "title": "Type",
              "type": "string",
              "oneOf": [
                { "title": "Spot Area", "enum": ["spotArea"] },
                { "title": "Custom Area", "enum": ["customArea"] }
              ]
            },
            "spotAreaCommand11": {
              "title": "Command",
              "type": "string",
              "required": true,
              "description": "Enter a 'Spot Area' number or multiple numbers separated by a comma.",
              "pattern": "^([0-9]|[1-9][0-9]+|(([0-9],|[1-9][0-9]+,)+([0-9]|[1-9][0-9]+)))$",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType11 == 'spotArea' );"
              }
            },
            "customAreaCommand11": {
              "title": "Command",
              "type": "string",
              "required": true,
              "description": "Enter a 'Custom Area' by providing the coordinates in the format 'x1,y1,x2,y2' (without decimals and the inverted comma).",
              "pattern": "^((-?[0-9],|-?[1-9][0-9]+,){3}(-?[0-9]|-?[1-9][0-9]+))$",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType11 == 'customArea' );"
              }
            },
            "commandNote11": {
              "title": "Note",
              "type": "string",
              "description": "Enter a note for this predefined area.",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType11);"
              }
            },
            "commandType12": {
              "title": "Type",
              "type": "string",
              "oneOf": [
                { "title": "Spot Area", "enum": ["spotArea"] },
                { "title": "Custom Area", "enum": ["customArea"] }
              ]
            },
            "spotAreaCommand12": {
              "title": "Command",
              "type": "string",
              "required": true,
              "description": "Enter a 'Spot Area' number or multiple numbers separated by a comma.",
              "pattern": "^([0-9]|[1-9][0-9]+|(([0-9],|[1-9][0-9]+,)+([0-9]|[1-9][0-9]+)))$",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType12 == 'spotArea' );"
              }
            },
            "customAreaCommand12": {
              "title": "Command",
              "type": "string",
              "required": true,
              "description": "Enter a 'Custom Area' by providing the coordinates in the format 'x1,y1,x2,y2' (without decimals and the inverted comma).",
              "pattern": "^((-?[0-9],|-?[1-9][0-9]+,){3}(-?[0-9]|-?[1-9][0-9]+))$",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType12 == 'customArea' );"
              }
            },
            "commandNote12": {
              "title": "Note",
              "type": "string",
              "description": "Enter a note for this predefined area.",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType12);"
              }
            },
            "commandType13": {
              "title": "Type",
              "type": "string",
              "oneOf": [
                { "title": "Spot Area", "enum": ["spotArea"] },
                { "title": "Custom Area", "enum": ["customArea"] }
              ]
            },
            "spotAreaCommand13": {
              "title": "Command",
              "type": "string",
              "required": true,
              "description": "Enter a 'Spot Area' number or multiple numbers separated by a comma.",
              "pattern": "^([0-9]|[1-9][0-9]+|(([0-9],|[1-9][0-9]+,)+([0-9]|[1-9][0-9]+)))$",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType13 == 'spotArea' );"
              }
            },
            "customAreaCommand13": {
              "title": "Command",
              "type": "string",
              "required": true,
              "description": "Enter a 'Custom Area' by providing the coordinates in the format 'x1,y1,x2,y2' (without decimals and the inverted comma).",
              "pattern": "^((-?[0-9],|-?[1-9][0-9]+,){3}(-?[0-9]|-?[1-9][0-9]+))$",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType13 == 'customArea' );"
              }
            },
            "commandNote13": {
              "title": "Note",
              "type": "string",
              "description": "Enter a note for this predefined area.",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType13);"
              }
            },
            "commandType14": {
              "title": "Type",
              "type": "string",
              "oneOf": [
                { "title": "Spot Area", "enum": ["spotArea"] },
                { "title": "Custom Area", "enum": ["customArea"] }
              ]
            },
            "spotAreaCommand14": {
              "title": "Command",
              "type": "string",
              "required": true,
              "description": "Enter a 'Spot Area' number or multiple numbers separated by a comma.",
              "pattern": "^([0-9]|[1-9][0-9]+|(([0-9],|[1-9][0-9]+,)+([0-9]|[1-9][0-9]+)))$",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType14 == 'spotArea' );"
              }
            },
            "customAreaCommand14": {
              "title": "Command",
              "type": "string",
              "required": true,
              "description": "Enter a 'Custom Area' by providing the coordinates in the format 'x1,y1,x2,y2' (without decimals and the inverted comma).",
              "pattern": "^((-?[0-9],|-?[1-9][0-9]+,){3}(-?[0-9]|-?[1-9][0-9]+))$",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType14 == 'customArea' );"
              }
            },
            "commandNote14": {
              "title": "Note",
              "type": "string",
              "description": "Enter a note for this predefined area.",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType14);"
              }
            },
            "commandType15": {
              "title": "Type",
              "type": "string",
              "oneOf": [
                { "title": "Spot Area", "enum": ["spotArea"] },
                { "title": "Custom Area", "enum": ["customArea"] }
              ]
            },
            "spotAreaCommand15": {
              "title": "Command",
              "type": "string",
              "required": true,
              "description": "Enter a 'Spot Area' number or multiple numbers separated by a comma.",
              "pattern": "^([0-9]|[1-9][0-9]+|(([0-9],|[1-9][0-9]+,)+([0-9]|[1-9][0-9]+)))$",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType15 == 'spotArea' );"
              }
            },
            "customAreaCommand15": {
              "title": "Command",
              "type": "string",
              "required": true,
              "description": "Enter a 'Custom Area' by providing the coordinates in the format 'x1,y1,x2,y2' (without decimals and the inverted comma).",
              "pattern": "^((-?[0-9],|-?[1-9][0-9]+,){3}(-?[0-9]|-?[1-9][0-9]+))$",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType15 == 'customArea' );"
              }
            },
            "commandNote15": {
              "title": "Note",
              "type": "string",
              "description": "Enter a note for this predefined area.",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType15);"
              }
            },
            "overrideLogging": {
              "type": "string",
              "title": "Override Logging Setting",
              "description": "Override global logging setting for this device.",
              "oneOf": [
                {
                  "title": "Default (Use Global Setting)",
                  "enum": ["default"]
                },
                {
                  "title": "Enable Standard Logging",
                  "enum": ["standard"]
                },
                {
                  "title": "Enable Debug Logging",
                  "enum": ["debug"]
                },
                {
                  "title": "Disable All Logging",
                  "enum": ["disable"]
                }
              ],
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice);"
              }
            }
          }
        }
      }
    }
  },
  "layout": [
    {
      "type": "fieldset",
      "title": "Required Settings",
      "items": ["useYeedi", "countryCode", "username", "password", "debug", "disablePlugin"]
    },
    {
      "type": "fieldset",
      "title": "Advanced Settings",
      "description": "Advanced settings for the plugin, including refresh interval options.",
      "expandable": true,
      "items": ["disableDeviceLogging", "refreshTime"]
    },
    {
      "key": "devices",
      "title": "Device Settings",
      "description": "Optional settings for your devices.",
      "expandable": true,
      "add": "Add Another Device",
      "type": "array",
      "items": [
        {
          "type": "fieldset",
          "items": [
            "devices[].label",
            "devices[].deviceId",
            "devices[].ignoreDevice",
            "devices[].hideMotionSensor",
            "devices[].motionDuration",
            "devices[].lowBattThreshold",
            "devices[].showMotionLowBatt",
            "devices[].showBattHumidity",
            {
              "expandable": true,
              "title": "Predefined Areas",
              "type": "fieldset",
              "condition": {
                "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice);"
              },
              "description": "Create Eve app buttons for cleaning predefined 'Spot Areas' or 'Custom Areas'. <a href=\"https://github.com/bwp91/homebridge-deebot/wiki/Custom-Areas\" target=\"_blank\">Read more →</a>",
              "items": [
                {
                  "expandable": false,
                  "title": "Old Commands (<= Release 5.1.0)",
                  "type": "fieldset",
                  "description": "Please move those entries to separate areas of type 'Spot Area' below to make use of the new note or custom area feature. IMPORTANT: You need to empty the old commands as they have priority for backwards compatibility reasons.",
                  "condition": {
                    "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && (model?.devices?.[arrayIndices]?.command1 || model?.devices?.[arrayIndices]?.command2 || model?.devices?.[arrayIndices]?.command3 || model?.devices?.[arrayIndices]?.command4 || model?.devices?.[arrayIndices]?.command5 ||model?.devices?.[arrayIndices]?.command6 || model?.devices?.[arrayIndices]?.command7 || model?.devices?.[arrayIndices]?.command8 || model?.devices?.[arrayIndices]?.command9 ||model?.devices?.[arrayIndices]?.command10 || model?.devices?.[arrayIndices]?.command11 || model?.devices?.[arrayIndices]?.command12 || model?.devices?.[arrayIndices]?.command13 || model?.devices?.[arrayIndices]?.command14 || model?.devices?.[arrayIndices]?.command15));"
                  },
                  "items": [
                    "devices[].command1",
                    "devices[].command2",
                    "devices[].command3",
                    "devices[].command4",
                    "devices[].command5",
                    "devices[].command6",
                    "devices[].command7",
                    "devices[].command8",
                    "devices[].command9",
                    "devices[].command10",
                    "devices[].command11",
                    "devices[].command12",
                    "devices[].command13",
                    "devices[].command14",
                    "devices[].command15"                    
                  ]
                },
                {
                  "expandable": false,
                  "title": "Area 1",
                  "type": "fieldset",
                  "condition": {
                    "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice);"
                  },
                  "items": [
                    "devices[].commandType1",
                    "devices[].spotAreaCommand1",
                    "devices[].customAreaCommand1",
                    "devices[].commandNote1"
                  ]
                },
                {
                  "expandable": false,
                  "title": "Area 2",
                  "type": "fieldset",
                  "condition": {
                    "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType1);"
                  },
                  "items": [
                    "devices[].commandType2",
                    "devices[].spotAreaCommand2",
                    "devices[].customAreaCommand2",
                    "devices[].commandNote2"
                  ]
                },
                {
                  "expandable": false,
                  "title": "Area 3",
                  "type": "fieldset",
                  "condition": {
                    "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType2);"
                  },
                  "items": [
                    "devices[].commandType3",
                    "devices[].spotAreaCommand3",
                    "devices[].customAreaCommand3",
                    "devices[].commandNote3"
                  ]
                },
                {
                  "expandable": false,
                  "title": "Area 4",
                  "type": "fieldset",
                  "condition": {
                    "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType3);"
                  },
                  "items": [
                    "devices[].commandType4",
                    "devices[].spotAreaCommand4",
                    "devices[].customAreaCommand4",
                    "devices[].commandNote4"
                  ]
                },
                {
                  "expandable": false,
                  "title": "Area 5",
                  "type": "fieldset",
                  "condition": {
                    "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType4);"
                  },
                  "items": [
                    "devices[].commandType5",
                    "devices[].spotAreaCommand5",
                    "devices[].customAreaCommand5",
                    "devices[].commandNote5"
                  ]
                },
                {
                  "expandable": false,
                  "title": "Area 6",
                  "type": "fieldset",
                  "condition": {
                    "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType5);"
                  },
                  "items": [
                    "devices[].commandType6",
                    "devices[].spotAreaCommand6",
                    "devices[].customAreaCommand6",
                    "devices[].commandNote6"
                  ]
                },
                {
                  "expandable": false,
                  "title": "Area 7",
                  "type": "fieldset",
                  "condition": {
                    "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType6);"
                  },
                  "items": [
                    "devices[].commandType7",
                    "devices[].spotAreaCommand7",
                    "devices[].customAreaCommand7",
                    "devices[].commandNote7"
                  ]
                },
                {
                  "expandable": false,
                  "title": "Area 8",
                  "type": "fieldset",
                  "condition": {
                    "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType7);"
                  },
                  "items": [
                    "devices[].commandType8",
                    "devices[].spotAreaCommand8",
                    "devices[].customAreaCommand8",
                    "devices[].commandNote8"
                  ]
                },
                {
                  "expandable": false,
                  "title": "Area 9",
                  "type": "fieldset",
                  "condition": {
                    "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType8);"
                  },
                  "items": [
                    "devices[].commandType9",
                    "devices[].spotAreaCommand9",
                    "devices[].customAreaCommand9",
                    "devices[].commandNote9"
                  ]
                },
                {
                  "expandable": false,
                  "title": "Area 10",
                  "type": "fieldset",
                  "condition": {
                    "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType9);"
                  },
                  "items": [
                    "devices[].commandType10",
                    "devices[].spotAreaCommand10",
                    "devices[].customAreaCommand10",
                    "devices[].commandNote10"
                  ]
                },
                {
                  "expandable": false,
                  "title": "Area 11",
                  "type": "fieldset",
                  "condition": {
                    "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType10);"
                  },
                  "items": [
                    "devices[].commandType11",
                    "devices[].spotAreaCommand11",
                    "devices[].customAreaCommand11",
                    "devices[].commandNote11"
                  ]
                },
                {
                  "expandable": false,
                  "title": "Area 12",
                  "type": "fieldset",
                  "condition": {
                    "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType11);"
                  },
                  "items": [
                    "devices[].commandType12",
                    "devices[].spotAreaCommand12",
                    "devices[].customAreaCommand12",
                    "devices[].commandNote12"
                  ]
                },
                {
                  "expandable": false,
                  "title": "Area 13",
                  "type": "fieldset",
                  "condition": {
                    "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType12);"
                  },
                  "items": [
                    "devices[].commandType13",
                    "devices[].spotAreaCommand13",
                    "devices[].customAreaCommand13",
                    "devices[].commandNote13"
                  ]
                },
                {
                  "expandable": false,
                  "title": "Area 14",
                  "type": "fieldset",
                  "condition": {
                    "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType13);"
                  },
                  "items": [
                    "devices[].commandType14",
                    "devices[].spotAreaCommand14",
                    "devices[].customAreaCommand14",
                    "devices[].commandNote14"
                  ]
                },
                {
                  "expandable": false,
                  "title": "Area 15",
                  "type": "fieldset",
                  "condition": {
                    "functionBody": "return (model?.devices?.[arrayIndices]?.deviceId?.length > 0 && !model?.devices?.[arrayIndices]?.ignoreDevice && model?.devices?.[arrayIndices]?.commandType14);"
                  },
                  "items": [
                    "devices[].commandType15",
                    "devices[].spotAreaCommand15",
                    "devices[].customAreaCommand15",
                    "devices[].commandNote15"
                  ]
                }
              ]
            }
            
          ]
        },
            "devices[].overrideLogging"
      ]
    }
  ]
}
